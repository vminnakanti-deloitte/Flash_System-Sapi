<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <http:listener-config name="system_subscription_api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="system_subscription_api-config" api="system_subscription_api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <db:config name="Database_Config" doc:name="Database Config" doc:id="21aed9dc-8f67-4f61-9a37-c4f265c795a7">
        <db:generic-connection url="jdbc:postgresql://queenie.db.elephantsql.com:5432/zcwqhumr" driverClassName="org.postgresql.Driver" user="zcwqhumr" password="A4P1IQFgL-FCjvyFr35tVWN4IKJjTYZT" />
    </db:config>
    <flow name="system_subscription_api-main">
        <http:listener config-ref="system_subscription_api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="system_subscription_api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="system_subscription_api-console">
        <http:listener config-ref="system_subscription_api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="system_subscription_api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="delete:\subscriptions:system_subscription_api-config">
        <db:delete doc:name="Deleting Subscrition Details" doc:id="e826256b-bce2-4c28-b252-a27071af0627" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from subscription where Subscriberid= :Subscriberid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	Subscriberid: attributes.queryParams.Subscriberid
}]]]></db:input-parameters>
		</db:delete>
		<logger level="INFO" message="delete:\subscriptions:system_subscription_api-config" />
		<ee:transform doc:name="Transform Message" doc:id="dc89396b-5244-415a-85f9-8430048abec0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message":"Subscription Details Deleted"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
    <flow name="patch:\subscriptions:application\json:system_subscription_api-config">
        <db:update doc:name="Update" doc:id="f3e3b774-cf14-43b8-983f-d023e205ae4b" config-ref="Database_Config">
			<db:sql ><![CDATA[update subscription set userid=: userid,connection_type= :connection_type,charges= :charges, duration = :duration,date= :date,operator= :operator where subscriberid= :subscriberid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	userid: payload.userid,
	connection_type: payload.connection_type,
	charges: payload.charges,
	duration: payload.duration,
	date: payload.date,
	operator: payload.operator
}]]]></db:input-parameters>
		</db:update>
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "Updated subscriber details"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\subscriptions:system_subscription_api-config">
        <db:select doc:name="Getting Subscription details of Users" doc:id="4854632c-70ab-40d1-9979-23fa06c79e8d" config-ref="Database_Config">
            <db:sql><![CDATA[select * from subscription;]]></db:sql>
        </db:select>
        <logger level="INFO" message="get:\subscriptions:system_subscription_api-config" />
        <ee:transform doc:name="Transform Message" doc:id="0f87c36b-1b1a-41f9-a1ba-3f2ab18b3a55">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="post:\subscriptions:application\json:system_subscription_api-config">
        <db:insert doc:name="Inserting Subscription Details of Users" doc:id="dab2f7ab-565a-4d8a-8c9e-3450c53c89b4" config-ref="Database_Config">
            <db:sql><![CDATA[insert into subscription(userid,connection_type,charges,duration,date,operator) values(:userid,:connection_type,:charges,:duration,:date,:operator)]]></db:sql>
            <db:input-parameters><![CDATA[#[{
	userid: payload.userid,
	connection_type: payload.connection_type,
	charges: payload.charges,
	duration: payload.duration,
	date: payload.date,
	operator: payload.operator
}]]]></db:input-parameters>
        </db:insert>
        <ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  "message ": "Subscriber details added"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
